name: Automated Test Build (Windows)

on:
  push:
    branches:
      - test
  pull_request:

jobs:
  build:
    runs-on: windows-2019
#    env:
#      access_token: ${{ secrets.ACCESS_TOKEN }}
    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Update submodules
      run: |
        git submodule update --init --recursive

    - name: Download premake
      id: premake
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://github.com/premake/premake-core/releases/download/v5.0.0-beta5/premake-5.0.0-beta5-windows.zip
    
    - name: Extract premake
      run: |
        7z x ${{ steps.premake.outputs.filepath }}
    
    - name: Download libevent
      id: libevent
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://github.com/libevent/libevent/releases/download/release-2.0.22-stable/libevent-2.0.22-stable.tar.gz
    
    - name: Extract libevent
      run: |
        tar xf ${{ steps.libevent.outputs.filepath }}
        move libevent-2.0.22-stable event
        xcopy /E event\WIN32-Code event\include

    - name: Download freetype
      id: freetype
      uses: mercury233/action-cache-download-file@main
      with:
        url: http://downloads.sourceforge.net/freetype/freetype-2.13.3.tar.gz

    - name: Extract freetype
      run: |
        tar xf ${{ steps.freetype.outputs.filepath }}
        move freetype-2.13.3 freetype

    - name: Download lua
      id: lua
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://www.lua.org/ftp/lua-5.4.7.tar.gz

    - name: Extract lua
      run: |
        tar xf ${{ steps.lua.outputs.filepath }}
        move lua-5.4.7 lua

    - name: Download sqlite
      id: sqlite
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://www.sqlite.org/2025/sqlite-amalgamation-3490100.zip
    
    - name: Extract sqlite
      run: |
        7z x ${{ steps.sqlite.outputs.filepath }}
        move sqlite-amalgamation-3490100 sqlite3

    - name: Download irrKlang
      id: irrKlang
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://www.ambiera.at/downloads/irrKlang-32bit-1.6.0.zip

    - name: Extract irrKlang
      run: |
        7z x ${{ steps.irrKlang.outputs.filepath }}
        move irrKlang-1.6.0 irrKlang

    - name: Download irrlicht
      run: |
        git clone --depth=1 https://github.com/mercury233/irrlicht

    - name: Check DirectX SDK
      id: dxsdk
      uses: actions/cache@v4
      with:
        key: dxsdk
        path: ${{ env.DXSDK_DIR || 'C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)' }}

    - name: Download DirectX SDK
      if: steps.dxsdk.outputs.cache-hit != 'true'
      id: dxsdk-download
      uses: mercury233/action-cache-download-file@main
      with:
        url: https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe

    - name: Install DirectX SDK
      if: steps.dxsdk.outputs.cache-hit != 'true'
      run: |
        ${{ steps.dxsdk-download.outputs.filepath }} /U /O

    - name: Set DirectX SDK environment variables
      if: env.DXSDK_DIR == null
      run: |
        echo DXSDK_DIR='C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\ >> %GITHUB_ENV%

    - name: Use premake to generate Visual Studio solution
      run: |
        xcopy /E premake\* .
        .\premake5.exe vs2019 --winxp-support

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build solution
      run: |
        MSBuild.exe build\YGOPro.sln /m /p:Configuration=Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          bin/release/YGOPro.exe